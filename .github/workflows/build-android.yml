# name: Build Android APK

# on:
#   push:
#     branches:
#       - main  # 你可以根据需要更改为其他分支
#   pull_request:

# jobs:
#   build:
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v2

#       - name: Setup Node
#         uses: actions/setup-node@v3
#         with:
#           node-version: 22.x
#           # cache: yarn

#       - name: Install dependencies
#         run: |
#           yarn global add expo
#           yarn global add eas-cli
#           yarn

#       - name: Build Android APK
#         run: |
#           npx expo prebuild
#           cd android && ./gradlew assembleRelease


#       - name: Upload APK
#         uses: actions/upload-artifact@v4  # 使用最新版本
#         with:
#           name: android-apk
#           path: ./android/app/build/outputs/apk/release/app-release.apk  # 根据你的项目结构调整路径




name: Build Android APK

on:
  push:
    branches: [main]
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4  # 升级到最新版本

      - name: Cache Node modules
        uses: actions/cache@v4
        id: node-cache
        with:
          path: |
            ~/.cache/yarn
            node_modules
            .expo
          key: ${{ runner.os }}-node-${{ hashFiles('yarn.lock') }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22.x
          # cache: yarn  # 自动缓存 yarn 依赖

      - name: Install global tools
        run: yarn global add expo-cli eas-cli  # 合并全局安装步骤

      - name: Install project dependencies
        if: steps.node-cache.outputs.cache-hit != 'true'  # 缓存未命中时才安装
        run: yarn install # --frozen-lockfile  # 锁定依赖版本加速安装

      # - name: Cache Gradle
      #   uses: actions/cache@v4
      #   with:
      #     path: |
      #       ~/.gradle/caches
      #       ~/.gradle/wrapper
      #       android/.gradle
      #     key: ${{ runner.os }}-gradle-${{ hashFiles('android/gradle/wrapper/gradle-wrapper.properties') }}

      - name: Build Android APK
        run: |
          npx expo prebuild --no-install  # 跳过自动安装依赖
          cd android
          ./gradlew assembleRelease \
            --parallel \          # 启用并行构建
            --build-cache \       # 启用构建缓存
            --no-daemon \         # 避免 GitHub Actions 的守护进程冲突
            --warning-mode none  # 禁用非必要警告

      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: android-apk
          path: android/app/build/outputs/apk/release/app-release.apk